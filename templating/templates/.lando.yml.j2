name: {{ app }} ######## ‚ö†Ô∏èPLEASE CHANGE THIS TO YOUR AWESOME APP's NAME!‚ö†Ô∏è
recipe: wordpress
config:
  via: nginx
  php: "{{ php }}"
  webroot: wordpress
  database: mariadb
  xdebug: true
  config:
    php: .lando/php.ini
    vhosts: .lando/nginx.conf
services:
  rediscache:
    type: redis
  mailhog:
    type: mailhog
    portforward: false
    hogfrom:
      - appserver
  appserver:
    overrides:
      environment:
        # Make this environment variable empty or else runtime xdebug mode change will not work
        XDEBUG_MODE: ''
        # Support debugging Drush with XDEBUG.
        PHP_IDE_CONFIG: "serverName=appserver"
        PROFILER_OUTPUT_DIR: "profiler-output" # If changing this value, change in .gitignore also
      volumes:
        # LINK CORE FILES. DON'T LINK THE ENTIRE DIRECTORY, BECAUSE THAT CAN CAUSE MANY IMPORTANT CORE LOCAL FILES TO BE OVERRIDDEN.
        - '~/wordpress/wordpress.setup-DO-NOT-DELETE/wordpress-core-{{ wp }}:/app/wordpress'
        # LINK LANDO CONFIG FILES.
        - '.lando/wp-cli.yml:/wp-cli.yml'
        # LINK WP-CONTENT DIRECTORY.
        - './wp-content:/app/wordpress/wp-content'
        # LINK WP-CONFIG.PHP FILE.
        - './wp-config.php:/app/wordpress/wp-config.php'
    # Have a look at this for better idea of build states:
    # Not needed because we are creating having wordpress-core already downloaded.
    # build:
    #   - wp core download --version=5.8.3 --force --skip-content
    build_as_root:
      - curl -sL https://deb.nodesource.com/setup_{{ node }} | bash -
      - apt-get install -y nodejs
    run:
      - sleep 2 # For some reason, we have to wait at least a second till database is up.
      - | # Create WordPress config file and add necessary constants and custom config. Currently this will not work because the volume mapping occurs before the file is created.üêõüêõ
        if test -f "$LANDO_WEBROOT/wp-config.php"; then
          echo "Config file already exists."
        else
        wp config create --dbhost=database --dbname=wordpress --dbuser=wordpress --dbpass=wordpress --dbprefix=wp_ --force --extra-php <<PHP
        \$redis_server = array(
          'host'     => 'rediscache',
          'port'     => 6379,
        );
        PHP
        fi
      - | # Let's check if WordPress is not installed, then install it
        if ! wp core is-installed; then
          {{ core_install_command }}
          {{ theme_install_command }}
          {{ query_monitor_install_command }}
          {{ user_create_command }}
          {{ user_super_admin_command }}
        fi
tooling:
  xdebug:
    description: Loads Xdebug in the selected mode.
    cmd:
      - appserver: /app/.lando/xdebug.sh
    user: root
proxy:
  appserver_nginx:
    - "{{ app }}.lndo.site"
    - "*.{{ app }}.lndo.site"